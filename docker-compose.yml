version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus_multiproc
    volumes:
      - ./models:/app/models
      - ./data_pipeline/data:/app/data
    depends_on:
      - mlflow
      - prometheus
    networks:
      - qosguard

  ui:
    build:
      context: .
      dockerfile: docker/ui.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - api
    networks:
      - qosguard

  mlflow:
    image: python:3.11-slim
    ports:
      - "5001:5000"
    command: >
      bash -c "
        pip install mlflow[extras] boto3 &&
        mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root /mlflow/artifacts --backend-store-uri /mlflow/store
      "
    volumes:
      - mlflow_data:/mlflow
    networks:
      - qosguard

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - qosguard

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - qosguard

volumes:
  mlflow_data:
  grafana_data:

networks:
  qosguard:
    driver: bridge
